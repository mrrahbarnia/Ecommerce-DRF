# Generated by Django 4.2 on 2024-01-29 04:51

import accounts.models
import accounts.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone_number', models.CharField(unique=True, validators=[accounts.validators.phone_validator], verbose_name='mobile number')),
                ('referral_code', models.CharField(default=accounts.models.referral_code_generator, max_length=100, verbose_name='referral code')),
                ('referral_counter', models.IntegerField(default=0, verbose_name='referral counter')),
                ('default_discount', models.IntegerField(default=0, verbose_name='default discount')),
                ('used_referral_code', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=6)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='last name')),
                ('age', models.IntegerField(blank=True, null=True, validators=[accounts.validators.age_validator])),
                ('image', models.ImageField(blank=True, null=True, upload_to=accounts.models.profile_img_file_path, validators=[accounts.validators.profile_image_size_validator], verbose_name='profile image')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('province', models.CharField(blank=True, max_length=150, null=True, verbose_name='province')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='city')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='street')),
                ('alley', models.CharField(blank=True, max_length=150, null=True, verbose_name='alley')),
                ('floor', models.CharField(blank=True, max_length=150, null=True, verbose_name='floor')),
                ('house_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='house number')),
                ('zip_code', models.CharField(blank=True, max_length=150, null=True, verbose_name='zip code')),
                ('telephone_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='telephone number')),
                ('entire_address', models.TextField(blank=True, null=True, verbose_name='entire address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
    ]
